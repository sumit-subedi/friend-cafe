{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sumit/djreact/restaurant/frontend/src/components/vieworder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import {render} from 'react-dom';\n\nimport { useHistory } from 'react-router-dom';\nimport ViewDetail from './viewDetail';\n\nconst ViewOrder = () => {\n  _s();\n\n  const [items, setItems] = useState({\n    list: []\n  });\n  const [details, setDetails] = useState(false);\n  const [id, setId] = useState();\n  useEffect(() => {\n    fetch('http://localhost:8000/vieworder').then(response => response.json()).then(data => {\n      setItems({\n        list: data\n      });\n    });\n  }, []);\n\n  const handleButtonClick = (e, id) => {\n    setDetails(true); //Call another component here like this\n    //<SomeComponenet id=id/> \n  };\n\n  if (!details) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: items.list.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [item.table.id, \"  \", item.table.tableName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleButtonClick(e, item.id),\n            children: \"View/Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(ViewDetail, {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this);\n  }\n};\n\n_s(ViewOrder, \"mKN4uLkgtz5M5FGo1jejnFbUuGU=\");\n\n_c = ViewOrder;\nexport default ViewOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOrder\");","map":{"version":3,"sources":["/home/sumit/djreact/restaurant/frontend/src/components/vieworder.js"],"names":["React","useState","useEffect","useHistory","ViewDetail","ViewOrder","items","setItems","list","details","setDetails","id","setId","fetch","then","response","json","data","handleButtonClick","e","map","item","index","table","tableName"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CACA;;AACA,SAASC,UAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAACO,IAAAA,IAAI,EAAG;AAAR,GAAD,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,EAAD,EAAKC,KAAL,IAAcX,QAAQ,EAA5B;AACAC,EAAAA,SAAS,CAAE,MAAK;AACdW,IAAAA,KAAK,CAAC,iCAAD,CAAL,CAAyCC,IAAzC,CACEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADd,EAEIF,IAFJ,CAESG,IAAI,IAAI;AACbV,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAGS;AAAR,OAAD,CAAR;AACH,KAJD;AAIG,GALI,EAKF,EALE,CAAT;;AAOA,QAAMC,iBAAiB,GAAG,CAACC,CAAD,EAAIR,EAAJ,KAAW;AACnCD,IAAAA,UAAU,CAAC,IAAD,CAAV,CADmC,CAEnC;AACA;AACC,GAJH;;AAMA,MAAI,CAACD,OAAL,EAAa;AACb,wBACE;AAAA,gBACEH,KAAK,CAACE,IAAN,CAAWY,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,4BACE;AAAA,kCACA;AAAA,uBAAKD,IAAI,CAACE,KAAL,CAAWZ,EAAhB,QAAsBU,IAAI,CAACE,KAAL,CAAWC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAQ,YAAA,OAAO,EAAKL,CAAD,IAAOD,iBAAiB,CAACC,CAAD,EAAGE,IAAI,CAACV,EAAR,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA,WAAYW,KAAZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAOC,OARD;AADF,qBADF;AAYG,GAbH,MAcG;AACF;AAAA,YAAC,UAAD;AAAY,MAAA,EAAE,EAAIX;AAAlB;AAAA;AAAA;AAAA;AAAA;AACD;AACD,CAlCD;;GAAMN,S;;KAAAA,S;AAmCN,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n// import {render} from 'react-dom';\nimport { useHistory} from 'react-router-dom';\nimport ViewDetail from './viewDetail';\n\nconst ViewOrder = () => {\n  const [items, setItems] = useState({list : []});\n  const [details, setDetails] = useState(false);\n  const [id, setId] = useState();\n  useEffect (() =>{\n    fetch('http://localhost:8000/vieworder').then(\n      response => response.json()\n      ).then(data => {\n        setItems({list : data})   \n    })}, [])\n\n  const handleButtonClick = (e, id) => {\n    setDetails(true)\n    //Call another component here like this\n    //<SomeComponenet id=id/> \n    }  \n    \n  if (!details){\n  return (\n    <>\n    {(items.list.map((item, index) => {\n      return (\n        <div key = {index}>\n        <h3>{item.table.id}  {item.table.tableName}</h3>\n        <button onClick = {(e) => handleButtonClick(e,item.id)}>View/Edit</button>\n        \n        </div>\n      )\n      }))}\n      </>\n ); }\n else{\n   <ViewDetail id = {id}/>\n }\n}\nexport default ViewOrder ;"]},"metadata":{},"sourceType":"module"}