{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sumit/djreact/restaurant/frontend/src/components/addorder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\n\nconst AddOrder = () => {\n  _s();\n\n  const [table, setTable] = useState({\n    tables: []\n  });\n  const [items, setItems] = useState({\n    foods: []\n  });\n  const [inputList, setInputList] = useState([{\n    itemid: \"\",\n    quantity: \"\"\n  }]);\n  useEffect(() => {\n    fetch('http://localhost:8000/menu').then(response => response.json()).then(data => {\n      setItems({\n        foods: data\n      });\n    });\n    fetch('http://localhost:8000/tables').then(response => response.json()).then(data => {\n      setTable({\n        tables: data\n      });\n    });\n  }, []);\n\n  const handleInputChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...inputList];\n    list[index][name] = value;\n    setInputList(list);\n  };\n\n  const handleAddClick = () => {\n    setInputList([...inputList, {\n      itemid: \"\",\n      quantity: \"\"\n    }]);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let url = 'http://localhost:8000/createorder';\n    let items = [{\n      \"items\": \"1\",\n      \"quantity\": \"312\"\n    }, {\n      \"items\": \"2\",\n      \"quantity\": \"9\"\n    }];\n    inputList.map(item => {});\n    console.log(e.target.items.value.itemName);\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        'tid': e.target.table.value,\n        'OrderedItem': [{\n          'itemid': e.target.items.value,\n          'quantity': e.target.quantity.value\n        }]\n      })\n    }).then(response => {\n      alert.show('Task was sucessful !!', {\n        type: 'success'\n      });\n    }).catch(error => {\n      alert.show('There was an error !!!', {\n        type: 'error'\n      });\n    });\n  };\n\n  const alert = useAlert();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"table\",\n        children: [table.tables.map(tab => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tab.id,\n          children: tab.tableName\n        }, tab.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 3\n      }, this), inputList.map((x, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"items\",\n            onChange: e => handleInputChange(e, i),\n            value: x.itemid || '',\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"----\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this), items.foods.map(food => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: food.id,\n              children: [\" \", food.itemName, \" \"]\n            }, food.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"quantity\",\n            onChange: e => handleInputChange(e, i),\n            value: x.quantity\n          }, x + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-box\",\n            children: inputList.length - 1 === i && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddClick,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: JSON.stringify(inputList)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddOrder, \"YCvbdriRiwsdA8n/OHv1vf1bOpI=\", false, function () {\n  return [useAlert];\n});\n\n_c = AddOrder;\nexport default AddOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOrder\");","map":{"version":3,"sources":["/home/sumit/djreact/restaurant/frontend/src/components/addorder.js"],"names":["React","useEffect","useState","useAlert","AddOrder","table","setTable","tables","items","setItems","foods","inputList","setInputList","itemid","quantity","fetch","then","response","json","data","handleInputChange","e","index","name","value","target","list","handleAddClick","handleSubmit","preventDefault","url","map","item","console","log","itemName","method","headers","body","JSON","stringify","alert","show","type","catch","error","tab","id","tableName","x","i","food","length","marginTop"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useAlert } from 'react-alert'\n\nconst AddOrder = () => {\n  const [table, setTable] = useState({tables : []})\n  const [items, setItems] = useState({foods : []})\n  const [inputList, setInputList] = useState([{ itemid: \"\", quantity: \"\" }]);\n\n\n  useEffect(() => {\n\n    fetch('http://localhost:8000/menu').then(\n      response => response.json()\n      ).then(data => {\n        setItems({foods : data})\n        \n    });\n\n    fetch('http://localhost:8000/tables').then(\n      response => response.json()\n      ).then(data => {\n        setTable({tables : data})\n        \n    })\n\n  }, [])\n\n\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n    const list = [...inputList];\n    list[index][name] = value;\n    setInputList(list);\n  };\n\n  const handleAddClick = () => {\n    setInputList([...inputList, { itemid: \"\", quantity: \"\" }]);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    \n    let url = 'http://localhost:8000/createorder'\n    let items = \n    [{\"items\":\"1\",\"quantity\":\"312\"},{\"items\":\"2\",\"quantity\":\"9\"}]\n    inputList.map(item => {\n\n    })\n    \n    console.log(e.target.items.value.itemName);\n\n    fetch (url, {\n      method : 'POST',\n      headers : {\n        'Content-type' : 'application/json',\n      },\n      body : JSON.stringify({\n        'tid': e.target.table.value,\n        'OrderedItem': [\n            {'itemid': e.target.items.value, 'quantity': e.target.quantity.value},\n            \n        ],\n    })\n    }).then ((response) => {\n      alert.show('Task was sucessful !!', {type:'success'})\n    }).catch ((error) => {\n      alert.show('There was an error !!!', {type : 'error'})\n    })\n  }\n  const alert = useAlert()\n\n  return (\n    \n<>\n<form onSubmit = {handleSubmit} >\n\n  <select name='table' >\n        {table.tables.map(tab =>\n          <option key={tab.id} value={tab.id} >{tab.tableName}</option>\n          )};\n      </select>\n\n    {inputList.map((x, i) => {\n      return (\n        <div className=\"box\">\n          <select name = \"items\" onChange = {e => handleInputChange(e, i)} value = {x.itemid || ''}>\n            <option value = \"\">----</option>\n            {items.foods.map(food =>\n              <option key = {food.id} value = {food.id}> {food.itemName} </option>\n            )}\n          </select>\n\n          <input type = \"number\" name = \"quantity\" key = {x + i} onChange = {e => handleInputChange(e, i)}\n          value = {x.quantity}/>\n      \n      \n          <div className=\"btn-box\">\n            \n            {inputList.length - 1 === i && <button onClick={handleAddClick}>Add</button>}\n          </div>\n        </div>\n      );\n    })}\n\n<input type = 'submit' />\n</form>\n    <div style={{ marginTop: 20 }}>{JSON.stringify(inputList)}</div>\n\n  </>\n\n  );\n\n}\n\nexport default AddOrder;"]},"metadata":{},"sourceType":"module"}