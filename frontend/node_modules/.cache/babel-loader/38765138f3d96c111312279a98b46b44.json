{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sumit/djreact/restaurant/frontend/src/components/addorder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\n\nconst AddOrder = () => {\n  _s();\n\n  const [table, setTable] = useState({\n    tables: []\n  });\n  const [items, setItems] = useState({\n    foods: []\n  });\n  useEffect(() => {\n    fetch('http://localhost:8000/menu').then(response => response.json()).then(data => {\n      console.log(data);\n      setItems({\n        foods: data\n      });\n    });\n    fetch('http://localhost:8000/tables').then(response => response.json()).then(data => {\n      console.log(data);\n      setTable({\n        tables: data\n      });\n    });\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let url = 'http://localhost:8000/createorder';\n    console.log(e.target.items.value.itemName);\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        'tid': e.target.table.value,\n        'OrderedItem': [{\n          'itemid': e.target.items.value,\n          'quantity': e.target.quantity.value\n        }]\n      })\n    }).then(response => {\n      alert.show('Task was sucessful !!', {\n        type: 'success'\n      });\n    }).catch(error => {\n      alert.show('There was an error !!!', {\n        type: 'error'\n      });\n    });\n  };\n\n  const alert = useAlert();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"table\",\n        children: [table.tables.map(tab => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tab.id,\n          children: tab.name\n        }, tab.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"items\",\n        children: [items.foods.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.itemName\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddOrder, \"bn0KuU6XPTekvNULSFTX9oDM4DQ=\", false, function () {\n  return [useAlert];\n});\n\n_c = AddOrder;\nexport default AddOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOrder\");","map":{"version":3,"sources":["/home/sumit/djreact/restaurant/frontend/src/components/addorder.js"],"names":["React","useEffect","useState","useAlert","AddOrder","table","setTable","tables","items","setItems","foods","fetch","then","response","json","data","console","log","handleSubmit","e","preventDefault","url","target","value","itemName","method","headers","body","JSON","stringify","quantity","alert","show","type","catch","error","map","tab","id","name","item"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useAlert } from 'react-alert'\n\nconst AddOrder = () => {\n  const [table, setTable] = useState({tables : []})\n  const [items, setItems] = useState({foods : []})\n\n\n  useEffect(() => {\n\n    fetch('http://localhost:8000/menu').then(\n      response => response.json()\n      ).then(data => {\n        console.log(data);\n        setItems({foods : data})\n        \n    });\n\n    fetch('http://localhost:8000/tables').then(\n      response => response.json()\n      ).then(data => {\n        console.log(data);\n        setTable({tables : data})\n        \n    })\n\n  }, [])\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    \n    let url = 'http://localhost:8000/createorder'\n    \n    console.log(e.target.items.value.itemName);\n\n    fetch (url, {\n      method : 'POST',\n      headers : {\n        'Content-type' : 'application/json',\n      },\n      body : JSON.stringify({\n        'tid': e.target.table.value,\n        'OrderedItem': [\n            {'itemid': e.target.items.value, 'quantity': e.target.quantity.value},\n            \n        ],\n    })\n    }).then ((response) => {\n      alert.show('Task was sucessful !!', {type:'success'})\n    }).catch ((error) => {\n      alert.show('There was an error !!!', {type : 'error'})\n    })\n  }\n  const alert = useAlert()\n\n  return (\n    <>\n\n    <form onSubmit = {handleSubmit} >\n\n      <select name='table'>\n        {table.tables.map(tab =>\n          <option key={tab.id} value={tab.id}>{tab.name}</option>\n          )};\n      </select>\n\n      <select name='items'>\n        {items.foods.map(item =>\n          <option key={item.id} value={item.id}>{item.itemName}</option>\n          )};\n      </select>\n      <input type = \"number\" name = \"quantity\"/>\n\n      {/* <label >name</label>\n      <input type = 'text' name = 'name'/>\n      <input type = 'number' name = 'price'/> */}\n\n      <input type = 'submit' />\n    </form>\n    </>\n  );\n\n}\n\nexport default AddOrder;"]},"metadata":{},"sourceType":"module"}