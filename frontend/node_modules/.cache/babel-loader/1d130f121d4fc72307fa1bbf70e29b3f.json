{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sumit/djreact/restaurant/frontend/src/components/vieworder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import {render} from 'react-dom';\n\nconst ViewOrder = () => {\n  _s();\n\n  const [items, setItems] = useState({\n    list: []\n  });\n  const [details, setDetails] = useState(false);\n  const [id, setId] = useState();\n  const [foods, setFoods] = useState({\n    food: []\n  });\n  const [refresh, setRefresh] = useState(true);\n  const [inputList, setInputList] = useState([{\n    itemid: \"\",\n    quantity: \"\"\n  }]);\n  useEffect(() => {\n    fetch('http://localhost:8000/vieworder').then(response => response.json()).then(data => {\n      setItems({\n        list: data\n      });\n    });\n  }, []);\n\n  const handleButtonClick = (e, id) => {\n    // e.preventDefault();\n    setId(id);\n    console.log(id);\n    setDetails(true);\n  };\n\n  if (!details) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: items.list.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [item.table.id, \"  \", item.table.tableName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleButtonClick(e, item.id),\n            children: \"View/Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false);\n  } else {\n    fetch('http://localhost:8000/menu').then(response => response.json()).then(data => {\n      setFoods({\n        food: data\n      });\n    });\n    fetch('http://localhost:800/viewOrderedItem?id=' + id).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n\n    const handleInputChange = (e, index) => {\n      const {\n        name,\n        value\n      } = e.target;\n      const list = [...inputList];\n      list[index][name] = value;\n      setInputList(list);\n    };\n\n    const handleAddClick = () => {\n      setInputList([...inputList, {\n        itemid: \"\",\n        quantity: \"\"\n      }]);\n    };\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      let url = 'http://localhost:8000/createorder';\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          'tid': e.target.table.value,\n          'OrderedItem': inputList\n        })\n      }).then(response => {\n        console.log(response);\n\n        if (response.ok) {\n          alert.show('Task was sucessful !!', {\n            type: 'success'\n          });\n          setRefresh(!refresh);\n          setInputList([{\n            itemid: \"\",\n            quantity: \"\"\n          }]);\n        } else {\n          throw new Error(\"Not Found\");\n        }\n      }).catch(error => {\n        setRefresh(!refresh);\n        alert.show('There was an error !!!', {\n          type: 'error'\n        });\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [inputList.map((x, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"itemid\",\n              onChange: e => handleInputChange(e, i),\n              value: x.itemid || '',\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"----\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 15\n              }, this), foods.food.map(food => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: food.id,\n                children: [\" \", food.itemName, \" \"]\n              }, food.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"quantity\",\n              onChange: e => handleInputChange(e, i),\n              value: x.quantity\n            }, x + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-box\",\n              children: inputList.length - 1 === i && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddClick,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 3\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(ViewOrder, \"7HHycfPFCj0aIE+xhQF7R93quz0=\");\n\n_c = ViewOrder;\nexport default ViewOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOrder\");","map":{"version":3,"sources":["/home/sumit/djreact/restaurant/frontend/src/components/vieworder.js"],"names":["React","useState","useEffect","ViewOrder","items","setItems","list","details","setDetails","id","setId","foods","setFoods","food","refresh","setRefresh","inputList","setInputList","itemid","quantity","fetch","then","response","json","data","handleButtonClick","e","console","log","map","item","index","table","tableName","handleInputChange","name","value","target","handleAddClick","handleSubmit","preventDefault","url","method","headers","body","JSON","stringify","ok","alert","show","type","Error","catch","error","x","i","itemName","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n// import {render} from 'react-dom';\n\n\n\n\n\nconst ViewOrder = () => {\n  const [items, setItems] = useState({list : []});\n  const [details, setDetails] = useState(false);\n  const [id, setId] = useState();\n\n  const [foods, setFoods] = useState({food : []})\n    const [refresh , setRefresh] = useState(true)\n    const [inputList, setInputList] = useState([{ itemid: \"\", quantity: \"\" }]);\n  \n  useEffect (() =>{\n    \n    fetch('http://localhost:8000/vieworder').then(\n      response => response.json()\n      ).then(data => {\n        setItems({list : data})\n        \n    })}, [])\n\n  const handleButtonClick = (e, id) => {\n    // e.preventDefault();\n    setId(id);\n    console.log(id)\n    setDetails(true);\n    \n    }\n    if (!details) {\n  return (\n\n    <>\n    {(items.list.map((item, index) => {\n      return (\n        <div key = {index}>\n        <h3>{item.table.id}  {item.table.tableName}</h3>\n        <button onClick = {(e) => handleButtonClick(e,item.id)}>View/Edit</button>\n        \n        </div>\n      )\n      \n\n      }))}\n      </>\n\n  );}\n  else{\n\n    \n  \n  \n    \n  \n      fetch('http://localhost:8000/menu').then(\n        response => response.json()\n        ).then(data => {\n          setFoods({food : data})\n          \n      });\n\n      fetch ('http://localhost:800/viewOrderedItem?id='+id).then(\n        response => response.json()\n      ).then(data =>{console.log(data)});\n      \n  \n    const handleInputChange = (e, index) => {\n      const { name, value } = e.target;\n      const list = [...inputList];\n      list[index][name] = value;\n      setInputList(list);\n    };\n  \n    const handleAddClick = () => {\n      setInputList([...inputList, { itemid: \"\", quantity: \"\" }]);\n    };\n  \n    const handleSubmit = (e) => {\n      e.preventDefault()\n      \n      let url = 'http://localhost:8000/createorder'\n     \n      \n      fetch (url, {\n        method : 'POST',\n        headers : {\n          'Content-type' : 'application/json',\n        },\n        body : JSON.stringify({\n          'tid': e.target.table.value,\n          'OrderedItem': inputList,\n      })\n      }).then ((response) => {\n        console.log(response);\n        if (response.ok){\n  \n        alert.show('Task was sucessful !!', {type:'success'})\n        setRefresh (!refresh)\n  \n        setInputList ([{ itemid: \"\", quantity: \"\" }])\n        }\n        else{\n          throw new Error(\"Not Found\")\n        }\n        \n      }).catch ((error) => {\n        setRefresh (!refresh)\n        alert.show('There was an error !!!' , {type : 'error'})\n      })\n      \n    }\n    \n  \n    return (\n      \n  <>\n  <form onSubmit = {handleSubmit} >\n  \n      {inputList.map((x, i) => {\n        return (\n          <div className=\"box\">\n            <select name = \"itemid\" onChange = {e => handleInputChange(e, i)} value = {x.itemid || ''} >\n              <option value = \"\">----</option>\n              {foods.food.map(food =>\n                <option key = {food.id} value = {food.id}> {food.itemName} </option>\n              )}\n            </select>\n  \n            <input type = \"number\" name = \"quantity\" key = {x + i} onChange = {e => handleInputChange(e, i)}\n            value = {x.quantity} />\n        \n        \n            <div className=\"btn-box\">\n              \n              {inputList.length - 1 === i && <button onClick={handleAddClick}>Add</button>}\n            </div>\n          </div>\n        );\n      })}\n  \n  <input type = 'submit' />\n  </form>\n      \n  \n    </>\n  \n    );\n    \n  \n  }\n}\n\n\nexport default ViewOrder ;"]},"metadata":{},"sourceType":"module"}