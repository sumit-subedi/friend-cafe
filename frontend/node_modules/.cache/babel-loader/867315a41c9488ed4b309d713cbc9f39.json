{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sumit/djreact/restaurant/frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useHistory } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\n\nconst Login = props => {\n  _s();\n\n  var history = useHistory();\n  const [cookies, setCookie] = useCookies(['username']);\n  useEffect(() => {\n    let url = 'http://localhost:8000/login';\n    console.log(cookies['username']);\n    fetch(url, {\n      credentials: 'same-origin',\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let url = 'http://localhost:8000/login';\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: e.target.name.value,\n        password: e.target.pass.value\n      })\n    }).then(response => {\n      if (response['ok']) {\n        let expires = new Date();\n        expires.setTime(expires.getTime() + 30 * 60);\n        setCookie('username', e.target.name.value, {\n          path: '/',\n          expires\n        });\n        history.push(\"/menu\");\n      } else {\n        alert.show('There was an error !!!', {\n          type: 'error'\n        });\n      }\n    });\n  };\n\n  const alert = useAlert();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"pass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"nAzhcGCHmaYhaCQYJHmuMvJxmt0=\", false, function () {\n  return [useHistory, useCookies, useAlert];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/sumit/djreact/restaurant/frontend/src/components/Login.js"],"names":["React","useEffect","useAlert","useHistory","useCookies","Login","props","history","cookies","setCookie","url","console","log","fetch","credentials","method","headers","Accept","handleSubmit","e","preventDefault","body","JSON","stringify","name","target","value","password","pass","then","response","expires","Date","setTime","getTime","path","push","alert","show","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,MAAIC,OAAO,GAAGJ,UAAU,EAAxB;AACA,QAAM,CAACK,OAAD,EAAUC,SAAV,IAAuBL,UAAU,CAAC,CAAC,UAAD,CAAD,CAAvC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,GAAG,GAAG,6BAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAAC,UAAD,CAAnB;AACAK,IAAAA,KAAK,CAACH,GAAD,EAAM;AACTI,MAAAA,WAAW,EAAE,aADJ;AAETC,MAAAA,MAAM,EAAE,MAFC;AAGTC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT;AAHA,KAAN,CAAL;AASD,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIV,GAAG,GAAG,6BAAV;AAEAG,IAAAA,KAAK,CAAEH,GAAF,EAAO;AACVK,MAAAA,MAAM,EAAG,MADC;AAEVC,MAAAA,OAAO,EAAG;AACR,wBAAiB;AADT,OAFA;AAKVK,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,IAAI,EAAGL,CAAC,CAACM,MAAF,CAASD,IAAT,CAAcE,KAAtB;AAA6BC,QAAAA,QAAQ,EAAGR,CAAC,CAACM,MAAF,CAASG,IAAT,CAAcF;AAAtD,OAAf;AALG,KAAP,CAAL,CAMGG,IANH,CAMUC,QAAD,IAAc;AACrB,UAAIA,QAAQ,CAAC,IAAD,CAAZ,EAAmB;AACjB,YAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACJD,QAAAA,OAAO,CAACE,OAAR,CAAgBF,OAAO,CAACG,OAAR,KAAoB,KAAG,EAAvC;AACIzB,QAAAA,SAAS,CAAC,UAAD,EAAaU,CAAC,CAACM,MAAF,CAASD,IAAT,CAAcE,KAA3B,EAAkC;AAAES,UAAAA,IAAI,EAAE,GAAR;AAAcJ,UAAAA;AAAd,SAAlC,CAAT;AACAxB,QAAAA,OAAO,CAAC6B,IAAR,CAAa,OAAb;AACD,OALD,MAMI;AACFC,QAAAA,KAAK,CAACC,IAAN,CAAW,wBAAX,EAAqC;AAACC,UAAAA,IAAI,EAAG;AAAR,SAArC;AACD;AAEF,KAjBD;AAkBD,GAtBD;;AAuBA,QAAMF,KAAK,GAAGnC,QAAQ,EAAtB;AAGA,sBACE;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAIgB,YAAlB;AAAA,8BAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,IAAI,EAAG;AAA5B;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,IAAI,EAAG;AAA5B;AAAA;AAAA;AAAA;AAAA,cANF,eAQE;AAAO,QAAA,IAAI,EAAG;AAAd;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAcD,CAzDD;;GAAMb,K;UACUF,U,EACeC,U,EAsCfF,Q;;;KAxCVG,K;AA2DN,eAAeA,KAAf","sourcesContent":["import React, { useEffect} from 'react';\nimport { useAlert } from 'react-alert';\nimport { useHistory} from 'react-router-dom';\nimport { useCookies } from 'react-cookie'\nconst Login = (props) => {\n  var history = useHistory();\n  const [cookies, setCookie] = useCookies(['username'])\n  useEffect(() => {\n    let url = 'http://localhost:8000/login'\n    console.log(cookies['username']);\n    fetch(url, {\n      credentials: 'same-origin',\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      \n    })\n  }, [])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    let url = 'http://localhost:8000/login'\n    \n    fetch (url, {\n      method : 'POST',\n      headers : {\n        'Content-type' : 'application/json',\n      },\n      body : JSON.stringify({name : e.target.name.value, password : e.target.pass.value})\n    }).then ((response) => {\n      if (response['ok']){\n        let expires = new Date()\n    expires.setTime(expires.getTime() + 30*60)\n        setCookie('username', e.target.name.value, { path: '/',  expires })\n        history.push(\"/menu\");\n      }\n      else{\n        alert.show('There was an error !!!', {type : 'error'})\n      }\n\n    })\n  };\n  const alert = useAlert()\n\n\n  return (\n    <>\n    <form onSubmit = {handleSubmit} >\n\n\n      <label >User name:</label>\n      <input type = 'text' name = 'name'/>\n      <label>Password</label>\n      <input type = 'text' name = 'pass'/>\n\n      <input type = 'submit' />\n    </form>\n    </>\n  )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}